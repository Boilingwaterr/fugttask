{"version":3,"sources":["components/preloader/Preloader.module.css","components/Search.module.css","components/Table.module.css","components/Error.module.css","api/api.js","redux/rootReducer.js","components/preloader/Preloader.jsx","components/Table.jsx","components/Search.jsx","redux/addFormReducer.js","components/AddForm.jsx","components/Paginator.jsx","redux/paginatorReducer.js","components/Error.jsx","App.jsx","redux/store.js","index.js","components/Paginator.module.css","components/AddForm.module.css"],"names":["module","exports","api","getSmallData","a","fetch","then","res","json","catch","e","Error","getBigData","initialState","isInit","isLoading","list","inputValue","filtered","sortedList","newFieldList","error","setData","data","type","setError","addField","Preloader","className","Style","preloader","preloaderContent","preloaderFirst","preloaderSecond","preloaderThird","Table","setSwitcher","sort","setInit","concatLists","useState","isDescending","setIsDescending","description","setDescription","useEffect","length","tableBody","sortHandler","_type","map","item","index","key","tableItem","onClick","firstName","lastName","readOnly","value","address","streetAddress","city","state","zip","descriptionHandler","id","email","phone","setTimeout","rect","rectDescending","rectAscending","tableWrapper","header","body","Search","setInputValue","filter","divideList","pageSize","submitHandler","searchForm","searchInput","onChange","currentTarget","placeholder","onKeyPress","searchIcon","SET_ID","idValue","firstNameValue","lastNameValue","emailValue","phoneValue","connect","addFormReducer","setFirstName","setId","setLastName","setPhone","setEmail","addNewField","dispatch","field","props","setAddMode","isFilled","setIsFilled","AddForm","onSubmit","preventDefault","inputWrapper","pattern","buttonWrapper","backButton","submitButton","Paginator","totalRowsCount","onPageChanged","currentPage","portionNumber","setPortionNumber","totalPagesCount","Math","ceil","portionCount","leftBorder","rightBorder","pages","i","push","paginator","doubleArrow","leftArrowtoEnd","leftArrow","page","undefined","rightArrow","rightArrowtoEnd","SET_LIST","listPortion","errorWrapper","message","root","rootReducer","paginatorReducer","getSmallDataThunk","result","getBigDataThunk","arr","sortBy","b","_sorting","options","toString","toLowerCase","includes","pageChanger","pageNumber","setTotalRowsCount","size","newArr","slice","divide","clearError","loadTable","setLoadTable","setType","addMode","switcher","_data","_setData","date","toLocaleTimeString","reducers","combineReducers","action","newField","clone","splice","newFirstName","toUpperCase","trim","newLastName","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.186d089b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2D4wo\",\"preloaderContent\":\"Preloader_preloaderContent__1upJo\",\"preloaderFirst\":\"Preloader_preloaderFirst__6n-xA\",\"preloaderSecond\":\"Preloader_preloaderSecond__3Fh99\",\"preloaderThird\":\"Preloader_preloaderThird__2EL1A\",\"first\":\"Preloader_first__5xIVM\",\"second\":\"Preloader_second__UjOjl\",\"third\":\"Preloader_third__3hwAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"Search_searchForm__1b1hb\",\"searchInput\":\"Search_searchInput__MJY20\",\"searchIcon\":\"Search_searchIcon__bA-o5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Table_tableWrapper__1tyC_\",\"header\":\"Table_header__2NaQG\",\"rectAscending\":\"Table_rectAscending__6BJkn\",\"rectDescending\":\"Table_rectDescending__rYyxh\",\"id\":\"Table_id__3m-95\",\"firstName\":\"Table_firstName__2U-c1\",\"lastName\":\"Table_lastName__yZsdU\",\"email\":\"Table_email__3Uisc\",\"phone\":\"Table_phone__1TpHx\",\"body\":\"Table_body__1bxoo\",\"tableItem\":\"Table_tableItem__hyD-B\",\"description\":\"Table_description__3IB0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"Error_errorWrapper__JJwBx\"};","export const api = {\r\n    getSmallData: async () => {\r\n        return fetch('http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}')\r\n            .then(res => res.json())\r\n            .catch(e => {\r\n                return new Error('Something went wrong. Pleae try again later.')\r\n            })\r\n    },\r\n    getBigData: () => {\r\n        return fetch('http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}')\r\n            .then(res => res.json())\r\n            .catch(e => {\r\n                return new Error('Something went wrong. Pleae try again later.')\r\n            })\r\n    }\r\n}","import { api } from './../api/api.js';\r\n// import { array } from './arr.js';\r\n\r\nconst SET_DATA = 'root/SET_DATA';\r\nconst SET_ERROR = 'root/SET_ERROR';\r\nconst SET_INPUT_VALUE = 'root/SET_INPUT_VALUE';\r\nconst SET_FILTERED = 'root/SET_FILTERED';\r\nconst ADD_FIELD = 'root/ADD_FIELD';\r\nconst SET_SORTED = 'root/SET_SORTED';\r\nconst SET_INIT = 'root/SET_INIT';\r\nconst CONCAT_LISTIS = 'root/CONCAT_LISTIS';\r\nconst CLEAR_ERROR = 'root/CLEAR_ERROR';\r\n\r\nconst initialState = {\r\n    isInit: false,\r\n    isLoading: false,\r\n    list: [],\r\n    inputValue: '',\r\n    filtered: null,\r\n    sortedList: null,\r\n    newFieldList: [],\r\n    error: null\r\n}\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INIT:\r\n            return {\r\n                ...state, isInit: action.data\r\n            };\r\n        case SET_DATA:\r\n            return {\r\n                ...state, list: action.data\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state, error: action.data\r\n            };\r\n        case SET_INPUT_VALUE:\r\n            return {\r\n                ...state, inputValue: action.data\r\n            };\r\n        case SET_FILTERED:\r\n            return {\r\n                ...state, filtered: action.data\r\n            };\r\n        case ADD_FIELD:\r\n            const newField = [action.data, ...state.newFieldList];\r\n            return {\r\n                ...state, newFieldList: newField\r\n            };\r\n        case CONCAT_LISTIS:\r\n            const clone = [...state.list];\r\n            if (!!action.data) {\r\n                clone.splice(0, action.data.length - 1, ...action.data);\r\n            }\r\n            return {\r\n                ...state, list: clone\r\n            };\r\n        case SET_SORTED:\r\n            return {\r\n                ...state, sortedList: action.data\r\n            };\r\n        case CLEAR_ERROR:\r\n            return {\r\n                ...state, error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInit = data => ({ type: SET_INIT, data });\r\nexport const clearError = () => ({ type: CLEAR_ERROR });\r\nexport const setInputValue = data => ({ type: SET_INPUT_VALUE, data });\r\nexport const setData = data => ({ type: SET_DATA, data });\r\nexport const concatLists = data => ({ type: CONCAT_LISTIS, data });\r\n\r\nconst setSorted = data => ({ type: SET_SORTED, data });\r\nconst setFiltered = data => ({ type: SET_FILTERED, data });\r\nconst setError = data => ({ type: SET_ERROR, data });\r\nconst addField = data => ({ type: ADD_FIELD, data });\r\n\r\nexport const addNewField = (data = {}) => {\r\n    return async dispatch => {\r\n        const field = {\r\n            id: data.idValue,\r\n            firstName: data.firstNameValue,\r\n            lastName: data.lastNameValue,\r\n            email: data.emailValue,\r\n            phone: data.phoneValue\r\n        }\r\n        await dispatch(addField(field));\r\n    }\r\n}\r\n\r\nexport const filter = (arr, options) => {\r\n    return async dispatch => {\r\n        let filtered = await arr.filter(item => {\r\n            if (item.id.toString().toLowerCase().includes(options.toLowerCase())) {\r\n                return true;\r\n            } else if (item.firstName.toLowerCase().includes(options.toLowerCase())) {\r\n                return true;\r\n            } else if (item.lastName.toLowerCase().includes(options.toLowerCase())) {\r\n                return true;\r\n            } else if (item.email.toLowerCase().includes(options.toLowerCase())) {\r\n                return true;\r\n            } else if (item.phone.toLowerCase().includes(options.toLowerCase())) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        })\r\n        dispatch(setFiltered(filtered));\r\n    }\r\n}\r\n\r\nexport const sort = (arr, sortBy, isDescending) => {\r\n    return dispatch => {\r\n        const result = _sorting(arr, sortBy, isDescending);\r\n        dispatch(setSorted(result))\r\n    }\r\n}\r\n\r\nexport const getSmallDataThunk = () => {\r\n    return async dispatch => {\r\n        const result = await api.getSmallData();\r\n        if (result.message === \"Something went wrong. Pleae try again later.\") {\r\n            dispatch(setError(result));\r\n        }\r\n        dispatch(setData(result));\r\n\r\n    }\r\n}\r\n\r\nexport const getBigDataThunk = () => {\r\n    return async dispatch => {\r\n        const result = await api.getBigData();\r\n        if (result.message === \"Something went wrong. Pleae try again later.\") {\r\n            dispatch(setError(result));\r\n        }\r\n        dispatch(setData(result));\r\n    }\r\n}\r\n\r\nfunction _sorting(arr, sortBy, isDescending) {\r\n    return arr.sort((a, b) => {\r\n        if (a[sortBy] < b[sortBy]) {\r\n            if (isDescending) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        } else if (a[sortBy] > b[sortBy]) {\r\n            if (isDescending) {\r\n                return -1;\r\n            }\r\n            return 1;\r\n        }\r\n        return 0;\r\n    })\r\n}","import React from 'react';\r\nimport Style from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return <div className={Style.preloader} >\r\n        <div className={Style.preloaderContent} >\r\n            <div className={Style.preloaderFirst}></div>\r\n            <div className={Style.preloaderSecond}></div>\r\n            <div className={Style.preloaderThird}></div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React, { useEffect, useState } from 'react';\r\nimport Preloader from './preloader/Preloader';\r\nimport Style from './Table.module.css';\r\n\r\nconst Table = ({ setSwitcher, sort, data, setInit, isInit, list, newFieldList, concatLists }) => {\r\n\r\n    const [isDescending, setIsDescending] = useState(false);\r\n    const [description, setDescription] = useState(false);\r\n\r\n    useEffect(() => {\r\n        !!newFieldList.length && concatLists(newFieldList);\r\n    }, [newFieldList, concatLists]);\r\n\r\n    const sortHandler = _type => {\r\n        setSwitcher(false);\r\n        setIsDescending(!isDescending);\r\n        sort(data, _type, isDescending);\r\n    }\r\n\r\n    const descriptionHandler = data => {\r\n        setDescription(<div className={Style.description}>\r\n            Выбран пользователь <b>{`${data.firstName} ${data.lastName}`}</b>\r\n            Описание:\r\n            <textarea readOnly value={data.description}>\r\n            </textarea>\r\n            Адрес проживания: <b>{data.address?.streetAddress}</b>\r\n            Город: <b>{data.address?.city}</b>\r\n            Провинция/штат: <b>{data.address?.state}</b>\r\n            Индекс: <b>{data.address?.zip}</b>\r\n        </div>)\r\n    }\r\n\r\n    let tableBody;\r\n    if (data) {\r\n        tableBody = data?.map((item, index) => {\r\n            return (\r\n                <div\r\n                    key={index}\r\n                    className={Style.tableItem}\r\n                    onClick={() => descriptionHandler(item)}\r\n                >\r\n                    <div className={Style.id}>\r\n                        {item.id}\r\n                    </div>\r\n                    <div className={Style.firstName}>\r\n                        {item.firstName}\r\n                    </div>\r\n                    <div className={Style.lastName}>\r\n                        {item.lastName}\r\n                    </div>\r\n                    <div className={Style.email}>\r\n                        {item.email}\r\n                    </div>\r\n                    <div className={Style.phone}>\r\n                        {item.phone}\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            !!list.length && setInit(true);\r\n        }, 1500)\r\n    }, [list, setInit]);\r\n\r\n    const rect = <div className={isDescending ? Style.rectDescending : Style.rectAscending}></div>\r\n\r\n    if (!isInit) {\r\n        return <Preloader />\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className={Style.tableWrapper}>\r\n                    <div className={Style.header}>\r\n                        <div\r\n                            className={Style.id}\r\n                            onClick={() => sortHandler('id')}>\r\n                            <p>id</p>\r\n                            {rect}\r\n                        </div>\r\n                        <div\r\n                            className={Style.firstName}\r\n                            onClick={() => sortHandler('firstName')}>\r\n                            <p>first name</p>\r\n                            {rect}\r\n                        </div>\r\n                        <div\r\n                            onClick={() => sortHandler('lastName')}\r\n                            className={Style.lastName}>\r\n                            <p>last name</p>\r\n                            {rect}\r\n                        </div>\r\n                        <div\r\n                            onClick={() => sortHandler('email')}\r\n                            className={Style.email}>\r\n                            <p>email</p>\r\n                            {rect}\r\n                        </div>\r\n                        <div\r\n                            onClick={() => sortHandler('phone')}\r\n                            className={Style.phone}>\r\n                            <p>phone</p>\r\n                            {rect}\r\n                        </div>\r\n                    </div>\r\n                    <div className={Style.body}>\r\n                        {tableBody}\r\n                    </div>\r\n                </div>\r\n                {description}\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Table;","import React, { useEffect } from 'react';\r\nimport Style from './Search.module.css';\r\n\r\nconst Search = ({ inputValue, setInputValue, filter,\r\n    list, divideList, filtered, pageSize, setSwitcher }) => {\r\n\r\n    const submitHandler = () => {\r\n        setSwitcher(true);\r\n        filter(list, inputValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        filtered && divideList(filtered, pageSize);\r\n    }, [filtered, divideList, pageSize]);\r\n\r\n    return (\r\n        <div className={Style.searchForm}>\r\n            <input\r\n                type=\"text\"\r\n                className={Style.searchInput}\r\n                value={inputValue}\r\n                onChange={(e) => {\r\n                    setInputValue(e.currentTarget.value);\r\n\r\n                }}\r\n                placeholder='Поиск'\r\n                onKeyPress={e => {\r\n                    if (e.key === 'Enter') {\r\n                        submitHandler();\r\n                    }\r\n                }}\r\n            />\r\n            <div\r\n                className={Style.searchIcon}\r\n                onClick={submitHandler}\r\n            >O--</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","const SET_FIRST_NAME = 'addForm/SET_FIRST_NAME';\r\nconst SET_LAST_NAME = 'addForm/SET_LAST_NAME';\r\nconst SET_ID = 'addForm/SET_ID';\r\nconst SET_EMAIL = 'addForm/SET_EMAIL';\r\nconst SET_PHONE = 'addForm/SET_PHONE';\r\n\r\nconst initialState = {\r\n    idValue: '',\r\n    firstNameValue: '',\r\n    lastNameValue: '',\r\n    emailValue: '',\r\n    phoneValue: '+7(922)2222222'\r\n}\r\n\r\nexport const addFormReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_FIRST_NAME:\r\n            let newFirstName;\r\n            if (action.data) {\r\n                newFirstName = action.data[0]?.toUpperCase().trim() + action.data.slice(1).trim();\r\n            } else {\r\n                newFirstName = action.data;\r\n            }\r\n\r\n            return {\r\n                ...state, firstNameValue: newFirstName\r\n            };\r\n        case SET_LAST_NAME:\r\n            let newLastName;\r\n            if (action.data) {\r\n                newLastName = action.data[0]?.toUpperCase().trim() + action.data.slice(1).trim();\r\n            } else {\r\n                newLastName = action.data;\r\n            }\r\n            return {\r\n                ...state, lastNameValue: newLastName\r\n            };\r\n        case SET_ID:\r\n            return {\r\n                ...state, idValue: action.data\r\n            };\r\n        case SET_EMAIL:\r\n            return {\r\n                ...state, emailValue: action.data\r\n            };\r\n        case SET_PHONE:\r\n            return {\r\n                ...state, phoneValue: action.data\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setFirstName = data => ({ type: SET_FIRST_NAME, data });\r\nexport const setLastName = data => ({ type: SET_LAST_NAME, data });\r\nexport const setId = data => ({ type: SET_ID, data });\r\nexport const setEmail = data => ({ type: SET_EMAIL, data });\r\nexport const setPhone = data => ({ type: SET_PHONE, data });\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setFirstName, setId, setLastName, setPhone, setEmail } from '../redux/addFormReducer';\r\nimport { addNewField } from '../redux/rootReducer';\r\nimport Style from './AddForm.module.css';\r\n\r\nconst AddForm = props => {\r\n\r\n    const {\r\n        setAddMode, setFirstName, setId, addFormReducer,\r\n        setLastName, setPhone, setEmail, addNewField, setSwitcher\r\n    } = props;\r\n\r\n    const { idValue, firstNameValue, lastNameValue, emailValue, phoneValue } = addFormReducer;\r\n\r\n    const [isFilled, setIsFilled] = useState(false);\r\n\r\n    useEffect(() => {\r\n        idValue && firstNameValue && lastNameValue && emailValue && phoneValue && setIsFilled(true);\r\n        return () => {\r\n            setIsFilled(false);\r\n        };\r\n    }, [idValue, firstNameValue, lastNameValue, emailValue, phoneValue]);\r\n\r\n    const submitHandler = e => {\r\n        setSwitcher(true)\r\n        e.preventDefault();\r\n        addNewField({ idValue, firstNameValue, lastNameValue, emailValue, phoneValue });\r\n        setAddMode(false);\r\n    }\r\n\r\n    return <>\r\n        <form className={Style.AddForm} onSubmit={submitHandler}>\r\n            <div className={Style.header}>\r\n                <h3>Заполните все поля</h3>\r\n            </div>\r\n            <div className={Style.inputWrapper}>\r\n                <input\r\n                    type=\"number\" placeholder=\"id\" value={addFormReducer.idValue}\r\n                    onChange={(e) => setId(e.currentTarget.value)}\r\n                />\r\n                <input\r\n                    type=\"text\" placeholder=\"first name\" value={addFormReducer.firstNameValue}\r\n                    onChange={(e) => setFirstName(e.currentTarget.value)}\r\n                />\r\n                <input type=\"text\" placeholder=\"last name\" value={addFormReducer.lastNameValue}\r\n                    onChange={(e) => setLastName(e.currentTarget.value)}\r\n                />\r\n                <input type=\"email\" placeholder=\"email\" value={addFormReducer.emailValue}\r\n                    onChange={(e) => setEmail(e.currentTarget.value)}\r\n                />\r\n                <input type=\"tel\" placeholder=\"phone\"\r\n                    pattern=\"\\+7\\s?[\\(]{0,1}9[0-9]{2}[\\)]{0,1}\\s?\\d{3}[-]{0,1}\\d{2}[-]{0,1}\\d{2}\"\r\n                    value={addFormReducer.phoneValue}\r\n                    onChange={(e) => setPhone(e.currentTarget.value)}\r\n                />\r\n            </div>\r\n            <div className={Style.buttonWrapper}>\r\n                <div className={Style.backButton} onClick={() => setAddMode(false)}>Назад</div>\r\n                {isFilled &&\r\n                    <button className={Style.submitButton} type='submit'>Добавить в таблицу</button>\r\n                }\r\n            </div>\r\n        </form>\r\n\r\n    </>\r\n}\r\nconst mapStateToProps = state => ({ addFormReducer: state.addFormReducer });\r\n\r\nexport default connect(mapStateToProps, {\r\n    setFirstName, setId, setLastName, setPhone, setEmail, addNewField\r\n})(AddForm);","import React, { useState } from 'react';\r\nimport Style from './Paginator.module.css';\r\n\r\nconst Paginator = props => {\r\n\r\n    const { totalRowsCount, pageSize, onPageChanged, currentPage, setSwitcher } = props;\r\n\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let portionSize = 5;\r\n    let totalPagesCount = Math.ceil(totalRowsCount / pageSize);\r\n    let portionCount = Math.ceil(totalPagesCount / portionSize);\r\n    let leftBorder = (portionNumber - 1) * portionSize + 1;\r\n    let rightBorder = portionNumber * portionSize;\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= totalPagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className={Style.paginator} >\r\n            <div className={Style.doubleArrow} >\r\n                <span\r\n                    onClick={() => { setPortionNumber(1) }}\r\n                    className={Style.leftArrowtoEnd}>\r\n                </span>\r\n            </div>\r\n            {\r\n                (portionNumber > 1) &&\r\n                <span onClick={() => { setPortionNumber(portionNumber - 1) }} >\r\n                    <div className={Style.leftArrow} ></div>\r\n                </span>\r\n            }\r\n            {\r\n                pages.filter(page => page >= leftBorder && page <= rightBorder)\r\n                    .map(page => {\r\n                        return (\r\n                            <span\r\n                                key={page}\r\n                                className={(currentPage === page) ? Style.currentPage : undefined}\r\n                                onClick={() => { onPageChanged(page); setSwitcher(true) }}>\r\n                                {page}\r\n                            </span>\r\n                        )\r\n                    })\r\n            }\r\n            {\r\n                (portionCount > portionNumber) &&\r\n                <span onClick={() => { setPortionNumber(portionNumber + 1) }}>\r\n                    <span className={Style.rightArrow}></span>\r\n                </span>\r\n            }\r\n            <div className={Style.doubleArrow} >\r\n                <span\r\n                    onClick={() => { setPortionNumber(totalPagesCount / portionSize) }}\r\n                    className={Style.rightArrowtoEnd}>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","const SET_LIST = 'paginator/SET_LIST';\r\nconst SET_CURRENT_PAGE = 'paginator/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'paginator/SET_TOTAL_COUNT';\r\n\r\nconst initialState = {\r\n    currentPage: 1,\r\n    pageSize: 50,\r\n    totalRowsCount: 0,\r\n    listPortion: []\r\n}\r\n\r\nexport const paginatorReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_LIST:\r\n            return {\r\n                ...state, listPortion: action.data\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.data\r\n            };\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state, totalRowsCount: action.data\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setList = data => ({ type: SET_LIST, data });\r\nconst setCurrentPage = data => ({ type: SET_CURRENT_PAGE, data });\r\nexport const setTotalRowsCount = data => ({ type: SET_TOTAL_COUNT, data });\r\n\r\nexport const pageChanger = pageNumber => {\r\n\r\n    return async dispatch => {\r\n        dispatch(setCurrentPage(pageNumber));\r\n    }\r\n}\r\n\r\nconst divide = (arr, size) => {\r\n    let newArr = [];\r\n    for (let i = 0; i < Math.ceil(arr.length / size); i++) {\r\n        newArr[i] = arr.slice((i * size), (i * size) + size);\r\n    }\r\n    return newArr;\r\n}\r\n\r\nexport const divideList = (arr, size) => {\r\n    return dispatch => {\r\n        if (!!arr) {\r\n            const newArr = divide(arr, size);\r\n            dispatch(setList(newArr));\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Style from './Error.module.css';\r\n\r\nconst Error = props => {\r\n    return <div className={Style.errorWrapper}>\r\n        <h1>Error</h1>\r\n        <h2>{props.error.message}</h2>\r\n    </div>\r\n}\r\n\r\nexport default Error;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport {\n  getBigDataThunk, getSmallDataThunk, concatLists,\n  sort, setInputValue, filter, setInit, setData, clearError\n} from './redux/rootReducer';\nimport Table from './components/Table';\nimport Search from './components/Search';\nimport AddForm from './components/AddForm';\nimport Paginator from './components/Paginator';\nimport { pageChanger, setTotalRowsCount, divideList } from './redux/paginatorReducer';\nimport ErrorComponent from './components/Error';\n\nconst App = props => {\n\n  const { root, setTotalRowsCount, divideList, paginator, setInit, setData,\n    concatLists, getSmallDataThunk, getBigDataThunk } = props;\n\n  const [loadTable, setLoadTable] = useState(false);\n  const [type, setType] = useState(null);\n  const [addMode, setAddMode] = useState(false);\n  const [switcher, setSwitcher] = useState(true);\n  const [_data, _setData] = useState([]);\n  const [date, setDate] = useState();\n\n  // useEffect(() => {\n  //   if (loadTable) {\n  //     requestIdleCallback(() => {\n  //       setDate(new Date())\n  //     })\n  //   }\n  // })\n\n  useEffect(() => {\n    if (type === 'big') {\n      getBigDataThunk();\n    } else if (type === 'small') {\n      getSmallDataThunk();\n    } else {\n      return;\n    }\n  }, [type, getSmallDataThunk, getBigDataThunk]);\n\n  useEffect(() => {// делим на порции\n    if (!!root.filtered) {\n      setTotalRowsCount(root.filtered.length) && divideList(root.filtered, paginator.pageSize);\n    } else {\n      setTotalRowsCount(root.list.length) && divideList(root.list, paginator.pageSize);\n    }\n    return () => {\n      setTotalRowsCount(0) && divideList([], 0);\n    };\n  }, [root.list, setTotalRowsCount, divideList, paginator.pageSize, root.filtered, root.sortedList]);\n\n  useEffect(() => {\n    if (!switcher) {\n      _setData(root.sortedList || root.filtered || root.list)\n    } else {\n      _setData(paginator.listPortion[paginator.currentPage - 1] || root.filtered || root.list)\n    }\n    return () => {\n      _setData([])\n    };\n  }, [root.sortedList, root.filtered, root.list,\n  paginator.listPortion, paginator.currentPage, switcher]);\n\n  if (!loadTable) {\n    return <div className=\"App\">\n      <button type=\"submit\" onClick={() => { setType('small'); setLoadTable(true); }}>\n        SMALL DATA\n      </button>\n      <button type=\"submit\" onClick={() => { setType('big'); setLoadTable(true); }}>\n        BIG DATA\n      </button>\n    </div>\n  } else {\n    if (root.error) {\n      return <ErrorComponent error={root.error} />\n    } else if (addMode) {\n      return <AddForm setAddMode={setAddMode} setSwitcher={setSwitcher} />\n    } else {\n      return <>\n        <h1>{date?.toLocaleTimeString()}</h1>\n        <Search\n          inputValue={root.inputValue}\n          setInputValue={props.setInputValue}\n          filter={props.filter}\n          filtered={root.filtered}\n          list={root.list}\n          divideList={divideList}\n          pageSize={paginator.pageSize}\n          setSwitcher={setSwitcher}\n        />\n        <div className='button-wrapper'>\n          <div className='add-button' onClick={() => setAddMode(true)}>\n            Добавить\n            </div>\n        </div>\n        <Table\n          data={_data}\n          type={type}\n          getBigDataThunk={props.getBigDataThunk}\n          getSmallDataThunk={props.getSmallDataThunk}\n          sort={props.sort}\n          sortedList={root.sortedList}\n          setInit={setInit}\n          isInit={root.isInit}\n          list={root.list}\n          setData={setData}\n          concatLists={concatLists}\n          newFieldList={root.newFieldList}\n          setSwitcher={setSwitcher}\n        />\n        <Paginator\n          totalRowsCount={paginator.totalRowsCount}\n          pageSize={paginator.pageSize}\n          onPageChanged={props.pageChanger}\n          currentPage={paginator.currentPage}\n          setSwitcher={setSwitcher}\n        />\n      </>\n    }\n  }\n}\n\nconst mapStateToProprs = state => ({ root: state.rootReducer, paginator: state.paginatorReducer });\n\nexport default connect(mapStateToProprs, {\n  getSmallDataThunk, getBigDataThunk, sort,\n  setInputValue, filter, pageChanger, setTotalRowsCount,\n  divideList, setInit, setData, concatLists, clearError\n})(App);\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { addFormReducer } from './addFormReducer';\r\nimport { paginatorReducer } from './paginatorReducer';\r\nimport { rootReducer } from './rootReducer';\r\n\r\nconst reducers = combineReducers({\r\n    rootReducer,\r\n    addFormReducer,\r\n    paginatorReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__PAY3T\",\"leftArrow\":\"Paginator_leftArrow__g8M9T\",\"rightArrow\":\"Paginator_rightArrow__3W3uB\",\"doubleArrow\":\"Paginator_doubleArrow__1O-R7\",\"rightArrowtoEnd\":\"Paginator_rightArrowtoEnd__ucDWU\",\"leftArrowtoEnd\":\"Paginator_leftArrowtoEnd__33lLH\",\"currentPage\":\"Paginator_currentPage__1YXDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddForm\":\"AddForm_AddForm__35eXJ\",\"header\":\"AddForm_header__36CxT\",\"inputWrapper\":\"AddForm_inputWrapper__1yiqU\",\"buttonWrapper\":\"AddForm_buttonWrapper__185WN\",\"backButton\":\"AddForm_backButton__2aFge\",\"submitButton\":\"AddForm_submitButton__IHQIK\"};"],"sourceRoot":""}